{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='v1', url='', help=''),
  image: (import 'image.libsonnet'),
  imageBlobReferences: (import 'imageBlobReferences.libsonnet'),
  imageImportSpec: (import 'imageImportSpec.libsonnet'),
  imageImportStatus: (import 'imageImportStatus.libsonnet'),
  imageLayer: (import 'imageLayer.libsonnet'),
  imageLayerData: (import 'imageLayerData.libsonnet'),
  imageLookupPolicy: (import 'imageLookupPolicy.libsonnet'),
  imageSignature: (import 'imageSignature.libsonnet'),
  imageStream: (import 'imageStream.libsonnet'),
  imageStreamImage: (import 'imageStreamImage.libsonnet'),
  imageStreamImport: (import 'imageStreamImport.libsonnet'),
  imageStreamImportSpec: (import 'imageStreamImportSpec.libsonnet'),
  imageStreamImportStatus: (import 'imageStreamImportStatus.libsonnet'),
  imageStreamLayers: (import 'imageStreamLayers.libsonnet'),
  imageStreamMapping: (import 'imageStreamMapping.libsonnet'),
  imageStreamSpec: (import 'imageStreamSpec.libsonnet'),
  imageStreamStatus: (import 'imageStreamStatus.libsonnet'),
  imageStreamTag: (import 'imageStreamTag.libsonnet'),
  namedTagEventList: (import 'namedTagEventList.libsonnet'),
  repositoryImportSpec: (import 'repositoryImportSpec.libsonnet'),
  repositoryImportStatus: (import 'repositoryImportStatus.libsonnet'),
  signatureCondition: (import 'signatureCondition.libsonnet'),
  signatureIssuer: (import 'signatureIssuer.libsonnet'),
  signatureSubject: (import 'signatureSubject.libsonnet'),
  tagEvent: (import 'tagEvent.libsonnet'),
  tagEventCondition: (import 'tagEventCondition.libsonnet'),
  tagImportPolicy: (import 'tagImportPolicy.libsonnet'),
  tagReference: (import 'tagReference.libsonnet'),
  tagReferencePolicy: (import 'tagReferencePolicy.libsonnet'),
}
